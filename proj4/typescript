Script started on 2025-04-07 12:36:39-04:00
bash-4.4$ make clean
rm -rf LinkedNodeClass.o SortedListClass.o FIFOQueueClass.o LIFOStackClass.o proj4.o proj4.exe
bash-4.4$ make 
g++ -std=c++98 -Wall -c LinkedNodeClass.cpp -o LinkedNodeClass.o 
g++ -std=c++98 -Wall -c SortedListClass.cpp -o SortedListClass.o 
g++ -std=c++98 -Wall -c LIFOStackClass.cpp -o LIFOStackClass.o 
g++ -std=c++98 -Wall -c FIFOQueueClass.cpp -o FIFOQueueClass.o 
g++ -std=c++98 -Wall -c proj4.cpp -o proj4.o
g++ LinkedNodeClass.o SortedListClass.o LIFOStackClass.o FIFOQueueClass.o proj4.o -o proj4.exe
bash-4.4$ make clean[6Pexitvalgrind --leak-check=full ./proj4.cpp [C[C[C[C[C[C[C[C[C[Cls[Kvalgrind --leak-check=full ./proj4.cpp [K[K[K[Kexe
==1432611== Memcheck, a memory error detector
==1432611== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==1432611== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==1432611== Command: ./proj4.exe
==1432611== 
===== FIFOQueueClass Tests =====
Enqueue 5 values: 10, 20, 30, 40, 50
10 20 30 40 50
Dequeuing 2 items...
Dequeued: 10
Dequeued: 20
30 40 50
Queue size: 3
Clearing queue...
List is empty!
Queue size: 0

===== LIFOStackClass Tests =====
Pushing 5 values: 10, 20, 30, 40, 50
50 40 30 20 10
Popping 2 items...
Popped: 50
Popped: 40
30 20 10
Stack size: 3
Clearing stack...
List is empty!
Stack size: 0

===== SortedListClass Tests =====
Inserting: 40, 10, 50, 20, 30
Printing forward:
Forward List Contents Follow:
  10
  20
  30
  40
  50
End Of List Contents
Printing backward:
Backward List Contents Follow:
  50
  40
  30
  20
  10
End Of List Contents
Removing front and last:
Removed front: 10
Removed last: 50
Printing forward again:
Forward List Contents Follow:
  20
  30
  40
End Of List Contents
Testing getElemAtIndex:
Index 1: 30
Index 10 is out of range.
List size: 3
Clearing list...
Forward List Contents Follow:
End Of List Contents
List size: 0
==1432611== 
==1432611== HEAP SUMMARY:
==1432611==     in use at exit: 0 bytes in 0 blocks
==1432611==   total heap usage: 17 allocs, 17 frees, 74,088 bytes allocated
==1432611== 
==1432611== All heap blocks were freed -- no leaks are possible
==1432611== 
==1432611== For lists of detected and suppressed errors, rerun with: -s
==1432611== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
bash-4.4$ exit
exit

Script done on 2025-04-07 12:37:30-04:00
